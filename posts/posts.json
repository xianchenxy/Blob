{
  "posts": [
    {
      "title": "typescript学习",
      "tags": ["typescript"],
      "description": "typescript",
      "cover": "typescript-icon.png",
      "date": "2023-10-26 10:00:00",
      "name": "learn_typescript"
    },
    {
      "title": "2023巽风科技前端面试·三面（3年）",
      "tags": ["frontend", "interview experience"],
      "description": "巽风、面试题",
      "cover": "xunfeng-icon.png",
      "style": "object-fit: contain",
      "date": "2023-10-26 10:00:00",
      "name": "2023_xunfeng_interview"
    },
    {
      "title": "2023富途前端面试·三面（3年）",
      "tags": ["frontend", "interview experience"],
      "description": "富途、面试题",
      "cover": "futu-icon.png",
      "style": "object-fit: contain",
      "date": "2023-10-16 17:00:00",
      "name": "2023_futu_interview3"
    },
    {
      "title": "2023富途前端面试·二面（3年）",
      "tags": ["frontend", "interview experience"],
      "description": "富途、面试题",
      "cover": "futu-icon.png",
      "style": "object-fit: contain",
      "date": "2023-10-12 10:00:00",
      "name": "2023_futu_interview2"
    },
    {
      "title": "2023富途前端面试（3年）",
      "tags": ["frontend", "interview experience"],
      "description": "富途、面试题",
      "cover": "futu-icon.png",
      "style": "object-fit: contain",
      "date": "2023-10-11 15:00:00",
      "name": "2023_futu_interview"
    },
    {
      "title": "【设计模式】09-享元模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "description": "共享、内外状态",
      "cover": "#posts#design_patterns/flyweight_pattern.png",
      "style": "object-fit: fill",
      "date": "2021-08-09 22:13:41",
      "name": "flyweight_pattern"
    },
    {
      "title": "【设计模式】08-模板方法模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "description": "继承，模板，开放-封闭原则",
      "cover": "#posts#design_patterns/template_pattern.png",
      "style": "object-fit: fill",
      "date": "2021-08-09 22:06:51",
      "name": "template_pattern"
    },
    {
      "title": "【设计模式】05-发布订阅模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "description": "隐藏关联性，调度中心",
      "cover": "#posts#design_patterns/publish_subscribe_pattern.png",
      "style": "object-fit: fill",
      "date": "2021-08-07 21:22:08",
      "name": "publish_subscribe_pattern"
    },
    {
      "title": "【设计模式】04-迭代器模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "description": "foreach，统一遍历接口消除多if",
      "cover": "#posts#design_patterns/iterator_pattern.png",
      "style": "object-fit: fill",
      "date": "2021-08-07 21:17:13",
      "name": "iterator_pattern"
    },
    {
      "title": "【设计模式】03-代理模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "description": "控制对象的访问，类摄政王制度",
      "cover": "#posts#design_patterns/proxy_pattern.png",
      "date": "2021-08-07 21:14:46",
      "name": "proxy_pattern"
    },
    {
      "title": "【设计模式】02-策略模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "cover": "#posts#design_patterns/strategy_pattern.png",
      "style": "object-fit: fill",
      "description": "中央集权制度，消除多if",
      "date": "2021-07-15 21:20:01",
      "name": "strategy_pattern"
    },
    {
      "title": "【设计模式】01-单例模式",
      "tags": ["frontend", "JavaScript", "Design Pattern"],
      "cover": "#posts#design_patterns/singleton_pattern.png",
      "description": "单实例、全局访问",
      "date": "2021-07-15 21:14:14",
      "name": "singleton_pattern"
    },
    {
      "title": "手写节流与防抖？生动展示装饰器原理与实践",
      "tags": ["frontend", "JavaScript"],
      "description": "光会默写还不够，理解原理及其背后的设计模式才能举一反三哦。",
      "date": "2022-10-10",
      "name": "decorators"
    },
    {
      "title": "你是否想过，字符串没有属性，为什么可以像对象一样调用",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "string"
    },
    {
      "title": "【面试题】手写bind，原来没有我想得那么简单",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "bind"
    },
    {
      "title": "vite+vuex4.x - hooks - useStore失效解决",
      "tags": ["frontend", "JavaScript", "Vite", "Vuex"],
      "cover": "vuex.jpg",
      "description": "",
      "date": "2022-10-10",
      "name": "use_store"
    },
    {
      "title": "还在用typeof、instanceof？是时候给你的类型检查升个级了",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "type_check"
    },
    {
      "title": "函数绑定func.bind",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "func_bind"
    },
    {
      "title": "函数原来是个对象",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "func_object"
    },
    {
      "title": "调度程序：setTimeout与setInterval",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "setTimeout_setInterval"
    },
    {
      "title": "变量作用域与闭包",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "variable_scope_and_closures"
    },
    {
      "title": "递归和堆桟",
      "tags": ["frontend", "JavaScript"],
      "description": "",
      "date": "2022-10-10",
      "name": "recursion_stacks"
    },
    {
      "title": "闭包的提权漏洞",
      "tags": ["frontend", "JavaScript", "Closure"],
      "description": "",
      "date": "2023-9-14",
      "name": "auth_bug_about_closure"
    },
    {
      "title": "webpack中多页应用的打包配置",
      "tags": ["frontend", "JavaScript", "Webpack"],
      "description": "多入口",
      "date": "2023-10-5 23:36:30",
      "cover": "webpack.svg",
      "name": "webpack_build_multiple_pages_app",
      "style": "object-fit: contain;"
    },
    {
      "title": "webpack5中 measure-webpack-plugin 的使用问题",
      "tags": ["frontend", "JavaScript", "Webpack"],
      "description": "measure-webpack-plugin",
      "date": "2023-10-6 15:55:00",
      "cover": "webpack.svg",
      "name": "speed_measure_webpack_plugin",
      "style": "object-fit: contain;"
    }
  ]
}
